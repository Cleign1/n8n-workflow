{
  "createdAt": "2025-06-13T16:39:09.739Z",
  "updatedAt": "2025-06-13T16:40:04.460Z",
  "id": "XNuBwlWLwCF5gd2p",
  "name": "new-AI-agent-2-not-finalized",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 22
            }
          ]
        }
      },
      "name": "Run Daily at 10 PM",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -960,
        140
      ],
      "id": "700b9bc7-a298-45f0-927b-a6f48710e0a4"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT quantity_sold\nFROM daily_sales\nWHERE product_id = 'P0001' -- <-- GANTI ID PRODUK INI\nAND sale_date >= CURRENT_DATE - INTERVAL '3 days'\nAND sale_date < CURRENT_DATE\nORDER BY sale_date DESC\nLIMIT 3;",
        "options": {}
      },
      "name": "Get Daily Sales (3 Days)",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -740,
        140
      ],
      "id": "83548e12-98ea-457a-b275-3c86e43e9214",
      "credentials": {
        "postgres": {
          "id": "ufLqaq0vJt3QUgxO",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT product_id, stock_on_hand \nFROM products\nWHERE product_id = 'P0001'; -- <-- GANTI ID PRODUK INI",
        "options": {}
      },
      "name": "Get Current Stock",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -520,
        140
      ],
      "id": "b58fa212-90ca-47e0-a5ca-b6ea72602f17",
      "credentials": {
        "postgres": {
          "id": "ufLqaq0vJt3QUgxO",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Mengambil data dari node-node sebelumnya\nconst salesData = $items(\"Get Daily Sales (3 Days)\");\nconst stockData = $items(\"Get Current Stock\")[0].json;\n\n// Validasi data penjualan\nif (salesData.length < 3) { // Cek jika data kurang dari 3 hari\n  return [{ json: { \n    product_id: stockData.product_id,\n    status: \"Data Penjualan Tidak Lengkap\",\n    keterangan: `Hanya ditemukan ${salesData.length} hari data penjualan.`,\n    error: true \n    } }];\n}\n\n// 1. Hitung total penjualan\nlet totalSales = 0;\nfor (const sale of salesData) {\n  totalSales += sale.json.quantity_sold;\n}\n\n// 2. Hitung Simple Moving Average (SMA) sebagai prediksi\n// Kita bagi 3 karena kita berasumsi mengambil data 3 hari\nconst predictedSales = Math.ceil(totalSales / 3); \n\n// 3. Ambil stok saat ini dari kolom yang benar\nconst currentStock = stockData.stock_on_hand; // <-- Menggunakan kolom stock_on_hand\n\n// 4. Bandingkan dan buat keputusan\nlet status = \"Cukup\";\nif (currentStock < predictedSales) {\n  status = \"Tidak Cukup\";\n}\n\n// 5. Kembalikan hasil yang terstruktur dan informatif\nreturn [{\n  json: {\n    product_id: stockData.product_id,\n    current_stock: currentStock,\n    predicted_sales_tomorrow: predictedSales,\n    status: status\n  }\n}];"
      },
      "name": "Predict Sufficiency",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -300,
        140
      ],
      "id": "ff036642-e4c9-4148-b274-e432c1c37a10"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "{{$json.status}}",
              "value2": "Cukup"
            }
          ]
        }
      },
      "name": "Is Stock Sufficient?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -80,
        140
      ],
      "id": "31c47a9f-e8cf-4d3d-a559-afffef70566a"
    }
  ],
  "connections": {
    "Run Daily at 10 PM": {
      "main": [
        [
          {
            "node": "Get Daily Sales (3 Days)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Daily Sales (3 Days)": {
      "main": [
        [
          {
            "node": "Get Current Stock",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Current Stock": {
      "main": [
        [
          {
            "node": "Predict Sufficiency",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Predict Sufficiency": {
      "main": [
        [
          {
            "node": "Is Stock Sufficient?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "296c4c43-50b2-442f-9385-a99f84864f2b",
  "triggerCount": 0,
  "tags": []
}